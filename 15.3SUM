unction threeSum(nums) {
    nums.sort((a, b) => a - b); // Sort the array
    const result = [];
    const n = nums.length;

    for (let i = 0; i < n - 2; i++) {
        // Skip duplicate elements for the first number
        if (i > 0 && nums[i] === nums[i - 1]) continue;

        let left = i + 1;
        let right = n - 1;

        while (left < right) {
            const sum = nums[i] + nums[left] + nums[right];

            if (sum === 0) {
                result.push([nums[i], nums[left], nums[right]]);
                left++;
                right--;

                // Skip duplicate elements for the second and third numbers
                while (left < right && nums[left] === nums[left - 1]) left++;
                while (left < right && nums[right] === nums[right + 1]) right--;
            } else if (sum < 0) {
                left++;
                  } else {
                right--;
            }
        }
    }

    return result;
}

// Example usage:
console.log(threeSum([-1, 0, 1, 2, -1,Â -4]));


